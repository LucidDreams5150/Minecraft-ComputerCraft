name: Build manifest.json
on:
  push:
    branches: [ main, master ]
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Generate manifest.json
        env:
          REPO: ${{ github.repository }}        # owner/repo
          BRANCH: ${{ github.ref_name }}        # branch name
        run: |
          python3 - << 'PY'
          import os, json, time, re
          from pathlib import Path

          repo = os.environ.get('REPO')
          branch = os.environ.get('BRANCH','main')
          base_raw = f"https://raw.githubusercontent.com/{repo}/{branch}"

          # Pick files to publish (now includes basectl/**)
          globs = [
            'clients/**/*.lua',
            'dist/**/*.lua',
            'mainframe/**/*.lua',
            'basectl/**/*.lua',
          ]

          def vhash(data: bytes) -> str:
            s = 0
            for b in data:
              s = (s * 31 + b) % 2147483647
            return f"{s:08x}"

          files = {}
          for g in globs:
            for p in Path('.').glob(g):
              if p.is_file():
                rel = '/' + str(p).replace('\\\', '/')
                data = p.read_bytes()
                files[rel] = {
                  'size': len(data),
                  'sum': vhash(data),
                  'url': f"{base_raw}{rel}",
                }

          def grep_version(path: str, pattern: str):
            try:
              s = Path(path).read_text(encoding='utf-8', errors='ignore')
            except Exception:
              return None
            m = re.search(pattern, s)
            return m.group(1) if m else None

          versions = {
            'labelClient': grep_version('clients/labelClient.lua', r'CLIENT_VER\\s*=\\s*\\"(v[0-9]+\\.[0-9]+\\.[0-9]+)\\"') or 'unknown',
            'distAgent':   grep_version('dist/dist_agent.lua', r'v([0-9]+\\.[0-9]+\\.[0-9]+)') or 'unknown',
            'repoServer':  grep_version('mainframe/repo_server.lua', r'v([0-9]+\\.[0-9]+\\.[0-9]+)') or 'unknown',
            'baseControl': grep_version('basectl/main.lua', r'APP_VER\\s*=\\s*\\"(v[0-9]+\\.[0-9]+\\.[0-9]+)\\"') or 'unknown',
          }

          manifest = {
            'schema': 1,
            'generated_at': time.strftime('%Y-%m-%dT%H:%M:%SZ', time.gmtime()),
            'repo': repo,
            'branch': branch,
            'versions': versions,
            'files': files,
          }

          Path('manifest.json').write_text(json.dumps(manifest, indent=2))
          print('Wrote manifest.json with', len(files), 'file(s)')
          PY
      - name: Commit manifest.json
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "build: update manifest.json"
          file_pattern: manifest.json
